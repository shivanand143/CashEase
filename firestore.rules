
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to check if the requesting user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users Collection
    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if isOwner(userId) || isAdmin();
      // Allow users to create their own profile on signup
      // Allow users to update their own profile (displayName, photoURL, paymentDetails, updatedAt)
      // Allow admins to update any user profile (e.g., role)
      allow write: if isOwner(userId) || isAdmin();
       // Specifically allow create for anyone authenticated (signup)
       allow create: if isAuthenticated();
       // Specifically allow update for owner or admin
       allow update: if isOwner(userId) || isAdmin();
        // Disallow delete for now
       allow delete: if false;
    }

    // Stores Collection
    match /stores/{storeId} {
      // Allow anyone to read store information
      allow read: if true;
      // Only allow admins to create, update, or delete stores
      allow write: if isAdmin();
    }

    // Coupons Collection
    match /coupons/{couponId} {
      // Allow anyone to read coupon information
      allow read: if true;
      // Only allow admins to create, update, or delete coupons
      allow write: if isAdmin();
    }

    // Clicks Collection
    match /clicks/{clickId} {
      // Allow authenticated users to create click logs
      allow create: if isAuthenticated();
      // Only allow admins or potentially the user who created it to read (adjust if needed)
      allow read: if isAdmin() || (isAuthenticated() && resource.data.userId == request.auth.uid);
      // Disallow updates/deletes generally
      allow update, delete: if false;
    }

    // Transactions Collection (Assume these are created by backend/admin function)
    match /transactions/{transactionId} {
      // Allow users to read their own transactions
      // Allow admins to read all transactions
      allow read: if isAdmin() || (isAuthenticated() && resource.data.userId == request.auth.uid);
      // Typically, transactions are created/updated by a secure backend process
      // Only allow admins to modify transactions directly (use with caution)
      allow write: if isAdmin();
       // Allow create only for admins (or backend function)
      allow create: if isAdmin();
       // Allow update only for admins (or backend function)
      allow update: if isAdmin();
      // Disallow delete for data integrity
      allow delete: if false;
    }

    // Payout Requests Collection
    match /payoutRequests/{requestId} {
      // Allow users to create their own payout requests
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Allow users to read their own requests
      // Allow admins to read all requests
      allow read: if isAdmin() || (isAuthenticated() && resource.data.userId == request.auth.uid);
      // Only allow admins to update the status/notes of payout requests
      allow update: if isAdmin();
      // Disallow delete for now
      allow delete: if false;
    }
  }
}
