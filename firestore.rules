
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to get user role from their profile document
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Helper function to check if the requesting user is an admin
    function isAdmin() {
      return isAuthenticated() && getUserRole(request.auth.uid) == 'admin';
    }

    // Users Collection
    // - Users can read and update their own profile.
    // - Admins can read and update any user profile.
    // - New users can create their own profile during signup.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated(); // Allow creation during signup
      allow update: if isOwner(userId) || isAdmin();
      // Delete is generally discouraged, but can be enabled for admins if needed
      // allow delete: if isAdmin();
    }

    // Stores Collection
    // - Anyone can read store information.
    // - Only admins can create, update, or delete stores.
    match /stores/{storeId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Coupons Collection
    // - Anyone can read coupon information.
    // - Only admins can create, update, or delete coupons.
    match /coupons/{couponId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Clicks Collection
    // - Authenticated users can create their own click logs.
    // - Admins can read click logs (for analytics, etc.).
    // - Users cannot read others' clicks, nor update/delete any clicks.
    match /clicks/{clickId} {
      allow read: if isAdmin(); // Or perhaps only owner if needed: isOwner(resource.data.userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Clicks should generally be immutable
    }

    // Transactions Collection
    // - Users can read their own transactions.
    // - Admins can read, create, and update any transaction (e.g., for manual adjustments or status changes).
    // - Transactions are typically created server-side or via admin panel, not directly by users.
    match /transactions/{transactionId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // Generally, only admins or backend functions create/update transactions
      allow create, update: if isAdmin();
      allow delete: if isAdmin(); // Be cautious with deleting financial records
    }

    // Payout Requests Collection
    // - Users can create their own payout requests.
    // - Users can read their own payout requests.
    // - Admins can read and update (approve/reject) any payout request.
    match /payoutRequests/{requestId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin(); // Only admins can change status, add notes, etc.
      allow delete: if isAdmin(); // Generally discouraged
    }
  }
}
