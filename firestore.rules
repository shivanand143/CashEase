
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow reads/writes only to authenticated users
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

     // Example specific rules (adjust as needed)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Allow users to create their profile
      allow update: if request.auth != null && request.auth.uid == userId; // Allow users to update their own profile
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins can delete
    }

    match /stores/{storeId} {
      allow read: if true; // Stores are public
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins
    }

    match /coupons/{couponId} {
       allow read: if true; // Coupons are public
       allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins
    }

    match /transactions/{transactionId} {
       allow read: if request.auth != null && resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // User or admin
       allow create: if request.auth != null; // Allow logged-in users to potentially create (e.g., via backend function)
       allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins can update status etc.
       allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins
    }

    match /payoutRequests/{requestId} {
        allow read: if request.auth != null && resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // User or admin
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid; // User can create their own request
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins can update status
        allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins
    }

     match /clicks/{clickId} {
       allow create: if request.auth != null && request.resource.data.userId == request.auth.uid; // User can log their own clicks
       // Optional: Allow admin read if needed for analytics/debugging
       // allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
     }
  }
}
