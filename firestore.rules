rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;
      // Allow authenticated users to create their own profile
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow users to update their own profile (excluding role, cashback balances)
      allow update: if request.auth != null && request.auth.uid == userId
                    && !('role' in request.resource.data)
                    && !('cashbackBalance' in request.resource.data)
                    && !('pendingCashback' in request.resource.data)
                    && !('lifetimeCashback' in request.resource.data)
                    && !('isDisabled' in request.resource.data);
      // Generally, disallow direct deletion by users
      allow delete: if false;

      // Admins can read/write any user profile (adjust role check if needed)
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Stores, Coupons, Categories, Banners - Allow read for all, write for admin
    match /stores/{storeId} {
      allow read: if true; // Publicly readable
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /coupons/{couponId} {
      allow read: if true; // Publicly readable
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /categories/{categoryId} {
        allow read: if true; // Publicly readable
        allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /banners/{bannerId} {
        allow read: if true; // Publicly readable
        allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }


    // Clicks - Users can create their own clicks, read their own clicks, admins can read all
    match /clicks/{clickId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // Admins can read all clicks
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
       // Generally disallow updates/deletes
       allow update, delete: if false;
    }

    // Transactions - Only readable by the user or admin, writable only by admin/backend
    match /transactions/{transactionId} {
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
       // Allow admins to update status/notes
       allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
       // Disallow client-side creation/deletion
      allow create, delete: if false;
       // Consider using backend functions for creating transactions based on affiliate confirmations
    }

    // Payout Requests - Users create/read their own, admin reads/updates all
    match /payoutRequests/{payoutRequestId} {
       allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
       allow read: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
       // Allow admins to update status/notes
       allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
                     && !('userId' in request.resource.data) // Prevent changing userId
                     && !('amount' in request.resource.data); // Prevent changing amount client-side
       // Disallow client-side deletion
      allow delete: if false;
    }
  }
}
