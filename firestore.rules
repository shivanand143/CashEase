
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && request.resource.data.uid == request.auth.uid;
      // Allow users to update specific fields (displayName, photoURL, payoutDetails, updatedAt)
      // Admins can update any field (role, isDisabled, balances, etc.)
      allow update: if (isOwner(userId) && 
                       request.resource.data.uid == resource.data.uid &&
                       !(request.resource.data.role != resource.data.role) && // User cannot change their own role
                       !(request.resource.data.isDisabled != resource.data.isDisabled) && // User cannot disable/enable their own account
                       !(request.resource.data.cashbackBalance != resource.data.cashbackBalance) && // User cannot change balances
                       !(request.resource.data.pendingCashback != resource.data.pendingCashback) &&
                       !(request.resource.data.lifetimeCashback != resource.data.lifetimeCashback)
                      ) || isAdmin();
      allow delete: if false; 
    }

    match /stores/{storeId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /coupons/{couponId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /banners/{bannerId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }
    
    match /products/{productId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /clicks/{clickId} {
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid &&
                       request.resource.data.clickId == clickId; // Ensure clickId in doc matches doc ID
      allow read: if (isAuthenticated() && resource.data.userId == request.auth.uid) || isAdmin();
      allow update, delete: if isAdmin();
    }

    match /transactions/{transactionId} {
      allow read: if (isAuthenticated() && resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if isAdmin(); // Only admins (or backend functions) create transactions
      allow update: if isAdmin(); // Only admins (or backend functions) update transaction status/details
      allow delete: if isAdmin();
    }

    match /payoutRequests/{requestId} {
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid &&
                       request.resource.data.amount > 0; // Basic check
      allow read: if (isAuthenticated() && resource.data.userId == request.auth.uid) || isAdmin();
      allow update: if isAdmin(); // Only admins can update status, notes, etc.
      allow delete: if isAdmin();
    }
  }
}
