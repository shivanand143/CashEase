
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && request.resource.data.uid == request.auth.uid;
      allow update: if (isOwner(userId) &&
                        request.resource.data.uid == resource.data.uid &&
                        // User cannot change their own role, isDisabled, or balances directly
                        !(request.resource.data.role != resource.data.role) &&
                        !(request.resource.data.isDisabled != resource.data.isDisabled) &&
                        !(request.resource.data.cashbackBalance != resource.data.cashbackBalance) &&
                        !(request.resource.data.pendingCashback != resource.data.pendingCashback) &&
                        !(request.resource.data.lifetimeCashback != resource.data.lifetimeCashback)
                       ) || isAdmin(); // Admin can update anything
      allow delete: if false;
    }

    match /stores/{storeId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /products/{productId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /coupons/{couponId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /banners/{bannerId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /clicks/{clickId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow update: if false; // Clicks should be immutable after creation by user
      allow delete: if isAdmin();
    }

    match /transactions/{transactionId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // Transactions should ideally be created by a backend/admin process
      // For this simulation, admin can create/update.
      allow create, update: if isAdmin();
      allow delete: if isAdmin();
    }

    match /payoutRequests/{requestId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow update: if isAdmin(); // Only admins can update status, adminNotes, etc.
      allow delete: if isAdmin();
    }
  }
}
