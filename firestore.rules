
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && request.resource.data.uid == request.auth.uid;
      allow update: if 
        (isOwner(userId) && 
            request.resource.data.uid == resource.data.uid && // Cannot change UID
            // Allow update of specific fields by owner
            (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'photoURL', 'payoutDetails', 'updatedAt', 'lastPayoutRequestAt']) ||
            // Prevent user from changing their own role or disabled status
            (!(request.resource.data.role != resource.data.role) && !(request.resource.data.isDisabled != resource.data.isDisabled)))
        ) || isAdmin(); // Admins can update anything
      allow delete: if false; // Prevent direct deletion
    }

    // Stores Collection
    match /stores/{storeId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Coupons Collection
    match /coupons/{couponId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Categories Collection
    match /categories/{categoryId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Banners Collection
    match /banners/{bannerId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }
    
    // Products Collection
    match /products/{productId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Clicks Collection
    match /clicks/{clickId} {
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid &&
                       request.resource.data.clickId == clickId; // Ensure doc ID matches field
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow update, delete: if isAdmin(); 
    }

    // Transactions Collection
    match /transactions/{transactionId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // Creation & updates primarily by admin for accuracy
      allow create: if isAdmin(); 
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // PayoutRequests Collection
    match /payoutRequests/{requestId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow update: if isAdmin(); // Only admins can update status, notes, etc.
      allow delete: if isAdmin();
    }
  }
}
